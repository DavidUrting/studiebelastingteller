(()=>{"use strict";var __webpack_modules__={856:()=>{eval('\n;// CONCATENATED MODULE: ./src/vak.js\n\ufefflet nextId = 0;\r\n\r\nclass Vak {\r\n    static restoreFromJsonObject(vakkenlijst, jsonObject) {\r\n        // de id-teller op het maximaal \'tegengekomen\' id zetten zodat er geen id-clashes ontstaan bij toevoegen van nieuwe vakken.\r\n        nextId = Math.max(nextId, jsonObject._id + 1);\r\n\r\n        // En het \'vak\' object aanmaken op basis van de settings in het vak uit de JSON.\r\n        let vak = new Vak(vakkenlijst, jsonObject._id, jsonObject._naam, jsonObject._studiepunten, jsonObject._aantalUren);\r\n        return vak;\r\n    }\r\n\r\n    constructor(vakkenlijst, id, naam, studiepunten, aantalUren) {\r\n        this._vakkenlijst = vakkenlijst;\r\n\r\n        if (id === null || id === undefined || id < 0) {\r\n            this._id = nextId++;\r\n        } else {\r\n            this._id = id;\r\n        }\r\n        this._naam = naam;\r\n        this._studiepunten = studiepunten;\r\n        this._aantalUren = aantalUren;\r\n    }\r\n\r\n    // Primaire (technische) sleutel van een vak.\r\n    // Blijft ongewijzigd, zelfs bij wijzigingen van de naam van het vak.\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get naam() {\r\n        return this._naam;\r\n    }\r\n\r\n    set naam(val) {\r\n        if (!val) {\r\n            throw "Een vaknaam moet minstens uit één teken bestaan";\r\n        }\r\n        this._naam = val;\r\n    }\r\n\r\n    get studiepunten() {\r\n        return this._studiepunten;\r\n    }\r\n\r\n    set studiepunten(val) {\r\n        if (isNaN(val) || val < 1) {\r\n            throw "Gelieve een getal groter dan 0 op te geven";\r\n        }\r\n        this._studiepunten = val;\r\n    }\r\n\r\n    // Het geschat aantal uren is een \'berekende\' property.\r\n    // Deze heeft dus geen \'setter\'.\r\n    get geschatAantalUren() {\r\n        return this._studiepunten * 30;\r\n    }\r\n\r\n    get aantalUren() {\r\n        return this._aantalUren;\r\n    }\r\n\r\n    set aantalUren(val) {\r\n        if (isNaN(val) || val < 0) {\r\n            throw "Gelieve een getal groter dan of gelijk aan 0 op te geven";\r\n        }\r\n        this._aantalUren = val;\r\n\r\n        // Na het aanpassen van de uren direct ook weer saven...\r\n        this._vakkenlijst.save();\r\n    }\r\n\r\n    render(tbody) {\r\n        let tr =\r\n`<tr id="vak-${this.id}">\r\n    <td><input name="naam" type="text" value="${this.naam}" class="form-control" /></td>\r\n    <td><input name="studiepunten" type="number" value="${this.studiepunten}" min="1" class="form-control" /></td>\r\n    <td><span>${this.geschatAantalUren}</span></td>\r\n    <td><input name="aantalUren" type="number" value="${this.aantalUren}" min="0" class="form-control" readonly /></td>\r\n    <td>\r\n        <button class="btn btn-primary">+</button>\r\n        <button class="btn btn-danger float-end">x</button>\r\n    </td>\r\n</tr>`;\r\n        // innerHTML gebruiken is gevaarlijk: want de tweede keer dat je een rij toevoegt zal de HTML content vervangen worden waardoor\r\n        // alle event handlers weggegooid worden...\r\n        tbody.insertAdjacentHTML(\'beforeend\', tr);\r\n\r\n        let naamInput = document.querySelector(`#vak-${this.id} input[name=\'naam\']`);\r\n        naamInput.addEventListener("change", (evt) => {\r\n            try {\r\n                this._resetError(naamInput);\r\n\r\n                this.naam = evt.target.value;\r\n                this._vakkenlijst.save();\r\n            } catch (ex) {\r\n                this._setError(naamInput, ex);\r\n            }\r\n        });\r\n\r\n        let studiepuntenInput = document.querySelector(`#vak-${this.id} input[name=\'studiepunten\']`);\r\n        let geschatAantalUrenSpan = document.querySelector(`#vak-${this.id} span`);\r\n        studiepuntenInput.addEventListener("change", (evt) => {\r\n            try {\r\n                this._resetError(studiepuntenInput);\r\n\r\n                this.studiepunten = evt.target.value;\r\n                this._geefFeedbackBijOverschrijding();\r\n                geschatAantalUrenSpan.innerText = this.geschatAantalUren;\r\n                this._vakkenlijst.save();\r\n            } catch (ex) {\r\n                this._setError(studiepuntenInput, ex);\r\n            }\r\n        });\r\n\r\n\r\n        let aantalUrenInput = document.querySelector(`#vak-${this.id} input[name=\'aantalUren\']`);\r\n        aantalUrenInput.addEventListener("change", (evt) => {\r\n            try {\r\n                this._resetError(aantalUrenInput);\r\n\r\n                this.aantalUren = evt.target.value;\r\n                this._geefFeedbackBijOverschrijding();\r\n            } catch (ex) {\r\n                aantalUrenInput.value = this.aantalUren;\r\n                this._setError(aantalUrenInput, ex);\r\n            }            \r\n        });\r\n\r\n        let verhoogAantalUrenButton = document.querySelector(`#vak-${this.id} > td:last-child > button:first-child`);\r\n        verhoogAantalUrenButton.addEventListener("click", (evt) => {\r\n            this.aantalUren++;\r\n            aantalUrenInput.value = this.aantalUren;\r\n            this._geefFeedbackBijOverschrijding();\r\n        });\r\n\r\n        let deleteButton = document.querySelector(`#vak-${this.id} > td:last-child > button:last-child`);\r\n        deleteButton.addEventListener("click", (evt) => {\r\n            this._vakkenlijst.deleteVak(this.id);\r\n        });\r\n\r\n        // En ook al direct een eerste keer aanroepen (want het zou kunnen dat het aantal uren al groter is dan het geschat aantal uren).\r\n        this._geefFeedbackBijOverschrijding();\r\n    }\r\n\r\n    _geefFeedbackBijOverschrijding() {\r\n        let aantalUrenInput = document.querySelector(`#vak-${this.id} input[name=\'aantalUren\']`);\r\n        if (this.aantalUren > this.geschatAantalUren) {\r\n            aantalUrenInput.style.backgroundColor = "red";\r\n        } else {\r\n            aantalUrenInput.style.backgroundColor = "unset";\r\n        }\r\n    }\r\n\r\n    _resetError(input) {\r\n        input.setAttribute(\'title\', \'\');\r\n        input.style.backgroundColor = "unset";\r\n    }\r\n\r\n    _setError(input, message) {\r\n        input.setAttribute(\'title\', message);\r\n        input.style.backgroundColor = "red";\r\n    }\r\n}\n;// CONCATENATED MODULE: ./src/vakkenlijst.js\n\ufeff\r\n\r\nconst localStorageKey = "vakkenLijst";\r\n\r\nclass Vakkenlijst {\r\n    constructor() {\r\n        this._vakken = [];\r\n\r\n        // Ophalen van de lijst van vakken uit de local storage.\r\n        // Opgelet: dit kan null zijn indien de pagina een eerste keer getoond wordt.\r\n        let vakkenLijstFromStorage = localStorage.getItem(localStorageKey);\r\n        if (vakkenLijstFromStorage) {\r\n            // Indien niet null: de JSON string terug omzetten naar een array van vakken.\r\n            // Opgelet: dit zijn gewone JavaScript objecten die niet (meer) afstammen van de Vak class.\r\n            // Vandaar loopen we over alle vakken uit de JSON en maken we terug volwaarde Vak-objecten van.\r\n            let vakkenFromJson = JSON.parse(vakkenLijstFromStorage);\r\n            vakkenFromJson.forEach(vakFromJson => {\r\n                let vak = Vak.restoreFromJsonObject(this, vakFromJson);\r\n                this._vakken.push(vak);\r\n            });\r\n        }\r\n        else {\r\n            // Indien wel null: al direct een cool vak toevoegen om toch iets te tonen :)\r\n            let vak = new Vak(this, -1, "Front end gevorderd", 6, 0);\r\n            this._vakken.push(vak);\r\n        }\r\n\r\n        // Nadien kan de lijst van vakkenop het scherm \'gerenderd\' worden.\r\n        this.render();\r\n    }\r\n\r\n    addVak(naam, studiepunten) {\r\n        let vak = new Vak(this, -1, naam, studiepunten, 0);\r\n        let bestaandVak = this._vakken.filter(v => v.naam === naam);\r\n        if (bestaandVak.length > 0) throw `Er bestaat reeds een vak met de naam ${naam}`;\r\n        else {\r\n            this._vakken.push(vak);\r\n            this.save();\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    deleteVak(id) {\r\n        let indexToDelete = -1;\r\n        for (let i = 0; i < this._vakken.length; i++) {\r\n            if (this._vakken[i].id === id) {\r\n                indexToDelete = i;\r\n                break;\r\n            }\r\n        }\r\n        if (indexToDelete >= 0) {\r\n            this._vakken.splice(indexToDelete, 1);\r\n            this.save();\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    save() {\r\n        localStorage.setItem(\r\n            localStorageKey,\r\n            // Hier is een addertje: aangezien Vakkenlijst verwijst naar Vak, en Vak ook weer naar Vakkenlijst hebben we een \'circulaire\' situatie.\r\n            // Met deze constructie kunnen we aangeven dat de _vakkenlijst van Vak mag genegeerd worden.\r\n            JSON.stringify(this._vakken, (key, value) => {\r\n                if (key === "_vakkenlijst") return;\r\n                else return value;\r\n            }));\r\n    }\r\n\r\n    render() {\r\n        let tbody = document.querySelector("tbody");\r\n\r\n        tbody.innerHTML = ""; // Indien render een zoveelste keer wordt aangeroepen: de rijen verwijderen en opnieuw aanmaken.\r\n        for (let i = 0; i < this._vakken.length; i++) {\r\n            // Elke rij mag zichzelf dan \'renderen\' in het HTML document.\r\n            this._vakken[i].render(tbody);\r\n        }\r\n    }\r\n}\n;// CONCATENATED MODULE: ./src/index.js\n\ufeff\r\n\r\nlet vakkenlijst = new Vakkenlijst();\r\n\r\ndocument.getElementById("voegVakToe").addEventListener("click", function (evt) {\r\n    vakkenlijst.addVak("Vak", 1);\r\n});\r\n\r\ndocument.getElementById("corrigeerUren").addEventListener("click", function (evt) {\r\n    let buttons = document.querySelectorAll("input");\r\n    for (let i = 0; i < buttons.length; i++) {\r\n        buttons[i].removeAttribute("readonly");\r\n    }\r\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///856\n')}},__webpack_exports__={};__webpack_modules__[856]()})();